openapi: 3.0.2
info:
  title: ai-with-java
  version: 1.0.0
  contact:
    name: Thomas Neeb
    email: thomas.neeb@nttdata.com
paths:
  /perceptron:
    post:
      operationId: startPerceptron
      responses:
        '204':
          description: Returns the actual game field for the given id
  /network:
    post:
      operationId: startNetwork
      responses:
        '204':
          description: Returns the actual game field for the given id
  /dl4j:
    post:
      operationId: startDL4J
      responses:
        '204':
          description: Returns the actual game field for the given id
  /tictactoe:
    post:
      operationId: ticTacToe
      responses:
        '204':
          description: Returns the actual game field for the given id
  /connectfour:
    post:
      operationId: connectFour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '204':
          description: Returns the actual game field for the given id
  /connectfour/interactive:
    post:
      operationId: resetConnectFour
      requestBody:
        content:
          application/json:
            schema:
              properties:
                starter:
                  $ref: '#/components/schemas/PlayerType'
      responses:
        '200':
          description: Returns the actual game field for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation2D'
  /connectfour/interactive/actions/{actionId}:
    parameters:
      - name: actionId
        in: path
        required: true
        schema:
          type: integer
    post:
      operationId: stepConnectFour
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation2D'
      responses:
        '200':
          description: Returns the actual game field for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation2D'
  /pong:
    post:
      operationId: pong
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '204':
          description: Returns the actual game field for the given id
  /gym:
    post:
      operationId: createGym
      responses:
        '200':
          description: Returns the actual game field for the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceId'
  /gym/{instanceId}/reset:
    parameters:
      - name: instanceId
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: resetGym
      responses:
        '200':
          description: Returns the actual game field for the given id
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Config:
      type: object
      properties:
        startFresh:
          type: boolean
          default: false
        saveModel:
          type: boolean
          default: false
        saveInterval:
          type: integer
          default: 1000
        epsilon:
          type: number
          format: double
          default: 1.0
        episodes:
          type: integer
          default: 1000
    InstanceId:
      type: object
      properties:
        instanceId:
          type: string
    Observation2D:
      properties:
        py:
          type: integer
        board:
          type: array
          items:
            type: array
            items:
              type: integer
        done:
          type: boolean
        winner:
          type: string
    PlayerType:
      enum:
        - COMPUTER
        - HUMAN