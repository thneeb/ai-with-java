<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.neebs</groupId>
  <artifactId>ai-with-java</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>ai-with-java</name>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.6</version>
  </parent>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <dl4j-master.version>1.0.0-M2.1</dl4j-master.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ai.djl</groupId>
        <artifactId>bom</artifactId>
        <version>0.31.0</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.hateoas</groupId>
      <artifactId>spring-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>2.2.8</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-core</artifactId>
      <version>${dl4j-master.version}</version>
    </dependency>
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-native</artifactId>
      <version>${dl4j-master.version}</version>
    </dependency>
    <!--dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-cuda-11.6</artifactId>
      <version>${dl4j-master.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>cuda-platform-redist</artifactId>
      <version>11.6-8.3-1.5.7</version>
    </dependency-->
    <!-- DJL API -->


    <dependency>
      <groupId>ai.djl</groupId>
      <artifactId>api</artifactId>
    </dependency>

    <!-- PyTorch als Backend -->
    <dependency>
      <groupId>ai.djl.pytorch</groupId>
      <artifactId>pytorch-engine</artifactId>
    </dependency>

    <!-- PyTorch Native für CPU (wenn du keine GPU nutzt) -->
    <dependency>
      <groupId>ai.djl.pytorch</groupId>
      <artifactId>pytorch-jni</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Falls du GPU-Unterstützung möchtest (statt der CPU-Variante) -->
    <!--
    <dependency>
        <groupId>ai.djl.pytorch</groupId>
        <artifactId>pytorch-native-cu121</artifactId>
        <version>2.2.0</version>
        <scope>runtime</scope>
    </dependency>
    -->

    <!-- Falls du Bildverarbeitung brauchst -->
    <dependency>
      <groupId>ai.djl.pytorch</groupId>
      <artifactId>pytorch-model-zoo</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
            <jvmArguments>
                --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                --add-exports=java.base/java.nio=ALL-UNNAMED
                --add-opens=java.base/java.nio=ALL-UNNAMED
                --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                -Dspring.profiles.active=local
            </jvmArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>7.10.0</version>
        <executions>
          <execution>
            <id>franchise</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/api-specs/ai-with-java.yaml</inputSpec>
              <generatorName>spring</generatorName>
              <library>spring-boot</library>
              <configOptions>
                <sourceFolder>src/gen/java/main</sourceFolder>
                <generateSupportingFiles>true</generateSupportingFiles>
                <interfaceOnly>true</interfaceOnly>
                <useResponseEntity>true</useResponseEntity>
                <skipDefaultInterface>true</skipDefaultInterface>
                <useTags>true</useTags>
                <useSpringBoot3>true</useSpringBoot3>
                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                <dateLibrary>legacy</dateLibrary>
                <openApiNullable>false</openApiNullable>
                <prependFormOrBodyParameters>true</prependFormOrBodyParameters>
                <generateBuilders>true</generateBuilders>
                <generateConstructorWithAllArgs>true</generateConstructorWithAllArgs>
                <apiPackage>de.neebs.aiwithjava.client.boundary</apiPackage>
                <modelPackage>de.neebs.aiwithjava.client.entity</modelPackage>
                <invokerPackage>de.neebs.aiwithjava.client.integration</invokerPackage>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>
            --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens=java.base/java.nio=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
